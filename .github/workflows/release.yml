name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: medusa
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: medusa.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: medusa
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create release archive
      shell: bash
      run: |
        mkdir release
        cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} release/
        cp README.md LICENSE release/
        
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cd release && 7z a ../medusa-${{ matrix.target }}.zip *
        else
          tar -czf medusa-${{ matrix.target }}.tar.gz -C release .
        fi
    
    - name: Upload release artifact
      uses: actions/upload-artifact@v4
      with:
        name: medusa-${{ matrix.target }}
        path: |
          *.tar.gz
          *.zip
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          *.tar.gz
          *.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}